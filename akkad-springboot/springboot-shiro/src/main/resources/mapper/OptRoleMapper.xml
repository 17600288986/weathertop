<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.wongs.weathertop.shiro.sys.mapper.OptRoleMapper" >
  <resultMap id="BaseResultMap" type="xyz.wongs.weathertop.shiro.sys.entity.OptRole" >
    <id column="role_id" property="id" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_code" property="roleCode" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="tips" property="tips" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role_id, role_name, role_code, num, pid, tips, version, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xyz.wongs.weathertop.shiro.sys.entity.OptRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from opt_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from opt_role
    where role_id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectRoleByAcctId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
     from opt_role t1
    where t1.role_id in(
    select m1.role_id from s_account m2,opt_acct_rol_ref m1
    where m2.accountid=#{accountid} and m1.accountid=m2.accountid and m1.state=m2.state and m2.state=#{state})
    and t1.state=#{state}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from opt_role
    where role_id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="xyz.wongs.weathertop.shiro.sys.entity.OptRole" >
    insert into opt_role (role_id, role_name, role_code, 
      num, pid, tips, version, 
      state)
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{tips,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, 
      #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="xyz.wongs.weathertop.shiro.sys.entity.OptRole" >
    insert into opt_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleCode != null" >
        role_code,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="tips != null" >
        tips,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="tips != null" >
        #{tips,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.wongs.weathertop.shiro.sys.entity.OptRole" >
    update opt_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="tips != null" >
        tips = #{tips,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.wongs.weathertop.shiro.sys.entity.OptRole" >
    update opt_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      tips = #{tips,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR}
    where role_id = #{id,jdbcType=BIGINT}
  </update>
</mapper>